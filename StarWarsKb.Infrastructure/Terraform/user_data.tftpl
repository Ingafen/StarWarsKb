#!/bin/sh
apt update
apt install mc vim git python3-pip apt-transport-https ca-certificates curl -y

git clone https://github.com/kubernetes-sigs/kubespray.git
cd kubespray
pip3 install -r requirements.txt

date >> log.txt

echo "Create public key" >> log.txt
cat <<EOT > id_rsa.pub
${public_key}
EOT

echo "Create private key" >> log.txt
cat <<EOT > id_rsa
${private_key}
EOT

echo "Change permissions and owners to ssh keys" >> log.txt
chmod 400 id_rsa
chmod 400 id_rsa.pub
chown ${user_name} id_rsa
chown ${user_name} id_rsa.pub

echo "Create Ansible config file" >> log.txt
cat <<EOT > ansible.cfg
[defaults]
remote_user = ${user_name}
host_key_checking = False
private_key_file = id_rsa

[privilege_escalation]
become=True
become_method=sudo
become_user=root
become_ask_pass=False
EOT

echo "Create Ansible inventory file" >> log.txt
cat <<EOT > my-inventory.ini
[k8s-cluster:children]
kube-master
kube-node
calico_rr

[all]
${master_name} ansible_host=${master_ip} ip=${master_ip}
${sonar_node_name} ansible_host=${sonar_node_ip} ip=${sonar_node_ip}
%{ for hostname, ip in worker_ips }${hostname} ansible_host=${ip} ip=${ip}
%{ endfor ~}

[kube-master]
${master_name}

[kube-node]
${sonar_node_name} ansible_host=${sonar_node_ip} ip=${sonar_node_ip}
%{ for hostname, ip in worker_ips }${hostname} ansible_host=${ip} ip=${ip}
%{ endfor ~}

[etcd]
${master_name}

[calico-rr]

EOT

mkdir inventory/ingafen
cp -r inventory/sample/group_vars/ inventory/ingafen/group_vars/
cp my-inventory.ini inventory/ingafen/
sed -i 's/helm_enabled: false/helm_enabled: true/' inventory/ingafen/group_vars/k8s_cluster/addons.yml
ansible-playbook -i inventory/ingafen/my-inventory.ini cluster.yml

cat <<EOT > sonar-values.yaml
tolerations: 
  - key: "sonarqube"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
nodeSelector: 
  sonarqube: "true"
postgresql.persistence.enabled: "false"
EOT

cat <<EOT > dashboard-admin.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard-admin
  namespace: kubernetes-dashboard
EOT

cat <<EOT > role-bind.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dashboard-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: dashboard-admin
  namespace: kubernetes-dashboard
EOT

cat <<EOT > cs-dev.txt
Host=${db_host};port=6432;sslmode=Require;Database=${db_dev_name};Username=${db_user};Password=${db_password};Trust Server Certificate=true
EOT

cat <<EOT > cs-test.txt
Host=${db_host};port=6432;sslmode=Require;Database=${db_test_name};Username=${db_user};Password=${db_password};Trust Server Certificate=true
EOT

cat <<EOT > cs-prod.txt
Host=${db_host};port=6432;sslmode=Require;Database=${db_prod_name};Username=${db_user};Password=${db_password};Trust Server Certificate=true
EOT


cat <<EOT > master.sh
export KUBECONFIG=/etc/kubernetes/admin.conf
chown ubuntu:ubuntu /etc/kubernetes/admin.conf

kubectl taint node sonarqubenode sonarqube=true:NoSchedule
kubectl label node sonarqubenode sonarqube=true
helm repo add sonarqube https://SonarSource.github.io/helm-chart-sonarqube
helm repo update
kubectl create namespace sonarqube
helm upgrade --install -n sonarqube -f sonar-values.yaml sonarqube sonarqube/sonarqube

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'

curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
chmod +x /usr/local/bin/argocd

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
kubectl apply -f dashboard-admin.yaml
kubectl apply -f role-bind.yaml

kubectl create namespace dev
kubectl create namespace test
kubectl create namespace prod

kubectl create secret generic cs-dev --from-file=connstr=./cs-dev.txt
kubectl create secret generic cs-test --from-file=connstr=./cs-test.txt
kubectl create secret generic cs-prod --from-file=connstr=./cs-prod.txt

EOT


scp -i id_rsa -o StrictHostKeyChecking=no master.sh ubuntu@${master_name}:master.sh 
scp -i id_rsa -o StrictHostKeyChecking=no sonar-values.yaml ubuntu@${master_name}:sonar-values.yaml 
scp -i id_rsa -o StrictHostKeyChecking=no dashboard-admin.yaml ubuntu@${master_name}:dashboard-admin.yaml 
scp -i id_rsa -o StrictHostKeyChecking=no role-bind.yaml ubuntu@${master_name}:role-bind.yaml 
scp -i id_rsa -o StrictHostKeyChecking=no cs-prod.txt ubuntu@${master_name}:cs-prod.txt 
scp -i id_rsa -o StrictHostKeyChecking=no cs-dev.txt ubuntu@${master_name}:cs-dev.txt.yaml 
scp -i id_rsa -o StrictHostKeyChecking=no cs-test.txt.yaml ubuntu@${master_name}:cs-test.yaml 
ssh -i id_rsa -o StrictHostKeyChecking=no ubuntu@${master_name} "sudo ./master.sh"


date >> log.txt

echo "Master ip is ${master_ip}"
