name: Workflow
on: 
  push:
    branches:
      - master
jobs:
  build_and_test:
    name: build and test
    runs-on: ubuntu-20.04
    steps:
      - name: Get sources
        uses: actions/checkout@v1
      - name: Install .net core 3.1
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'
      - name: Rebuild and run unit tests
        uses: cake-build/cake-action@v1
        env:
          EXPECTED_VERBOSITY: Diagnostic
        with:
          script-path: build.cake
          target: TestCoverage
          verbosity: Normal
          cake-version: 2.2.0
          cake-bootstrap: true    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
      - name: Build front-end and push to hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/swkb-front:latest
          file: StarWarsKb.Front/Dockerfile
      - name: Build back-end and push to hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/swkb-back:latest
          file: StarWarsKb.Back/Dockerfile
  build:
    name: Build and sonar
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"StarWarsKB" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_URL }}" /d:sonar.cs.opencover.reportsPaths="**\TestResults"
          dotnet build
          dotnet test --no-build --collect:"XPlat Code Coverage"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
